/*======================================================
对于面试的话，其实掌握01背包，和完全背包，就够用了，最多可以再来一个多重背包。
先对这几个概念做一下区分：
背包问题=>物品=>物品特征(价值w,体积v,每个物品的数量)=>数量判断
到数量的时候，就会分出几种:
1.只有一个=>不选|选一个 =>01背包
2.无数个  =>不选|选几个 =>完全背包
3.不同物品数量不同      =>多重背包
前三个都是混合背包的问题

4.按组打包每组最多选一个 =>分组背包


leetcode上连多重背包的题目都没有,所以题库告诉我们,
01背包和完全背包就够用了
而完全背包也是01背包稍作变化而来，
即：完全背包的物品数量是无限的
所以背包问题的理论基础重中之重是01背包，一定要理解透！

leetcode上没有纯01背包的问题，
都是01背包应用方面的题目，
也就是需要转化为01背包问题。

所以我先通过纯01背包问题，把01背包原理讲清楚，
后续再讲解leetcode题目的时候，
重点就是讲解如何转化为01背包问题了。

---------------------------------------------------

01背包：
有N件物品和一个最多能背重量为W的背包。
第i件物品的重量是weight[i],
得到的价值是value[i]
每件物品只能用一次，求解，
将哪些物品装入背包里物品价值总和最大


这是标准的背包问题，
以至于很多同学看了这个自然就会想到背包，
甚至都不知道暴力的解法应该怎么解了。

这样其实是没有从底向上去思考，
而是习惯性想到了背包，那么暴力的解法应该是怎么样的呢？

每一件物品其实只有两个状态，取或者不取，
所以可以使用回溯法搜索出所有的情况，
那么时间复杂度就是O(2^n)，这里的n表示物品数量。

所以暴力的解法是指数级别的时间复杂度。
进而才需要动态规划的解法来进行优化！

下边的讲解中，会使用这个例子：
背包最大重量为4；
	  重量 价值
物品0	1	15
物品1	3	20
物品2	4	30
问背包能背的物品最大价值是多少?
=======================================================*/
