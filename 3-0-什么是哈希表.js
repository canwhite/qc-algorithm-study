/*==========================================================
哈希表存储的是由key和value组成的数据
如果直接将键值对存入数组中，数据量越多，线性查找的时间就越长
使用哈希表就可以解决这个问题
比如我们要存储性别为M的Joe
1.可以先通过MD5、SHA-1、SHA-2这样的哈希函数，去生成哈希值，这里推荐SHA-2 ,
2.然后用哈希值除以数组长度5，求得余数，即进行mod运算
3.然后我们将Joe得数据存入数组的第三个箱子
重复上述操作
4.如果mod运算得到相同的值，即出现了冲突，那就在原来的位置后边继续链表添加
（这种方法叫做链地址法）
5.查询的Joe的时候，首先算出Joe的哈希值，然后mod运算，我们就知道它在几号箱子了
如果第一次查到的不是，那么就进行链表的线性查找

上述五个步骤讲到了哈希函数、值的映射和哈希碰撞
遇到碰撞了怎么办呢？
一般哈希碰撞有两种解决方法，链地址法和线性探测法，
上边讲到的是链地址法
而使用线性探测法则需要tableSize > dataSize 
我们需要哈希表中的空位来解决碰撞问题

----
数组就是一张哈希表
哈希表中关键码就是数组的索引下表，然后通过下表直接访问数组中的元素
那么哈希表能解决什么问题呢？
一般哈希表都是用来快速判断一个元素是否出现在集合里

在我们使用哈希法来解决问题的时候，我们一般会选择三种数据结构：
* 数组
* set(集合)
* map(映射)


============================================================*/
