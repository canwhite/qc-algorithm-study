/*
数组的每个下标作为一个阶梯，
第i个阶梯对应着一个非负数的体力花费值cost[i]
下标从0开始。

每当你爬上一个阶梯你都要花费对应的体力值，
一旦支付了相应的体力值，
你就可以选择向上爬一个阶梯或者爬两个阶梯。

请你找出达到楼层顶部的最低花费。
在开始时，你可以选择从下标为 0 或 1 的元素作为初始阶梯。

示例 1：

输入：
cost = [10, 15, 20] 
输出：15 
解释：最低花费是从 cost[1] 开始，
然后走两步即可到阶梯顶，一共花费 15 。  

示例 2：

输入：cost = [1, 100, 1, 1, 1, 100, 1, 1, 100, 1] 
输出：6 解释：最低花费方式是从 cost[0] 开始，逐个经过那些 1 ，跳过 cost[3] ，一共花费 6 。

提示：
cost 的长度范围是 [2, 1000]。
cost[i] 将会是一个整型数据，范围为 [0, 999] 。
---------------------------------------------------
思路：
注意题目描述：每当爬上一个楼梯你就要花费对应的体力值
，一旦支付了相应的体力值，
你就可以选择向上爬一层楼梯或者爬两层楼梯

所以示例1中只

我们可以选择从0或1作为初始台阶
示例1中我们选择1为初始台阶
花费一个15就可以到达阶梯顶，
最后一步可以理解为不用花费

读完题大家应该知道，指定需要动态规划的，贪心是不可能的

1.确定dp数组及其下标

2.确定递推公式

3.dp数组如何初始化

4.确定遍历顺序

5.举例推导dp数组




*/
